name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: mspr
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean package --file pom.xml

    - name: Run tests
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mspr
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: root
      run: mvn test

    - name: Build Docker image
      run: docker build . -t rafenitra/mspr-product:latest

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to DockerHub
      run: docker push rafenitra/mspr-product:latest

  security-checker:
    name: SecurityChecker
    runs-on: ubuntu-latest
    steps:
      - run: echo "SecurityChecker step"
  coding-standards:
    name: CodingStandards (Sonar)
    runs-on: ubuntu-latest
    steps:
      - run: echo "CodingStandards step"
  unit-test:
    needs: [ security-checker, coding-standards ]
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - run: echo "Unit tests step"
  deploy:
    needs: [ build ]
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - run: echo "Unit tests step"
